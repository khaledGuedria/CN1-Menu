package com.cnone.khaled;

import com.codename1.components.ImageViewer;
import com.codename1.components.SpanLabel;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.Font;
import com.codename1.ui.FontImage;
import com.codename1.ui.TextField;
import com.codename1.ui.plaf.Style;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }

        //FORM 1
        Form f1 = new Form("Sign In", BoxLayout.yCenter());

        TextField loginTF = new TextField(null, "Inserer votre login");

        TextField passwordTF = new TextField(null, "Inserer votre password");
        passwordTF.setConstraint(TextField.PASSWORD);

        Button submitBtn = new Button("Submit");
        submitBtn.addActionListener((evt) -> {

            if (loginTF.getText().equals("Admin") || passwordTF.getText().equals("Admin")) {

                //FORM 2
                Form f2 = new Form("Home", BoxLayout.xCenter());
                //Menu
                f2.getToolbar().addCommandToSideMenu("About", null, (evt2) -> {

                    //FORM 3
                    Form f3 = new Form("About", BoxLayout.yCenter());
                    f3.getToolbar().addCommandToSideMenu("Home", null, (evt3) -> {

                        f2.showBack();

                    });
                    
                    f3.getToolbar().addMaterialCommandToRightBar("Exit", FontImage.MATERIAL_LOGOUT, (evt4) -> {
                        loginTF.setText("");
                        passwordTF.setText("");
                        f1.showBack();
                        
                    });

                    ImageViewer imageV = new ImageViewer(theme.getImage("about.png"));
                    SpanLabel sl = new SpanLabel("Hartz has argued correctly that it is characteristic of "
                            + "fragment societies to be intolerant of rival ideologies. Our argument is that "
                            + "Canada is not a fragment society, but exhibits the ideological diversity of "
                            + "European societies, although it has a more liberal cast. ");
                    
                    f3.addAll(imageV, sl);
                    f3.show();

                });

                f2.add(new Label("Welcome to admin dashboard"));
                f2.show();

            } else {

                Dialog.show("Warning", "Invalid login or password!", "OK", null);

            }

        });

        f1.addAll(loginTF, passwordTF, submitBtn);
        f1.show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
